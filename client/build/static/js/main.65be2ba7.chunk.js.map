{"version":3,"sources":["components/Question.js","components/HighScores.js","components/NameSubmitForm.js","index.js"],"names":["Question","state","choiceA","food","props","foodBank","start","value","choiceB","correctChoice","Math","max","incorrectChoice","min","clicked","correct","deleteQuestion","chosenValue","correctValue","console","log","setState","render","questionNum","Fragment","className","onClick","selected","toFixed","Component","HighScores","highscores","id","map","name","score","setTimeout","fetch","then","res","json","users","NameSubmitForm","currentScore","inputValue","onSubmit","updateInputValue","type","class","resetfunc","evt","preventDefault","target","method","headers","body","JSON","stringify","submitscore","nextProps","this","FoodApp","randomFoodData","foodData","i","length","j","floor","random","saySomething","correctAnswers","totalAnswers","document","getElementById","setAttribute","createQuiz","children","push","key","correctFood","resetGame","submittedScore","goNext","bind","href","ReactDOM"],"mappings":"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","file":"static/js/main.65be2ba7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Question extends Component {\n\t\n\tstate = {\n\t\tchoiceA : {\n\t\t\tfood: this.props.foodBank[this.props.start].food,\n\t\t\tvalue: this.props.foodBank[this.props.start].value\n\t\t},\n\t\tchoiceB : {\n\t\t\tfood: this.props.foodBank[this.props.start+1].food,\n\t\t\tvalue: this.props.foodBank[this.props.start+1].value\n\t\t},\n\t\tcorrectChoice : Math.max(this.props.foodBank[this.props.start].value,this.props.foodBank[this.props.start+1].value),\n\t\tincorrectChoice : Math.min(this.props.foodBank[this.props.start].value,this.props.foodBank[this.props.start+1].value),\n\t\tclicked:0,\n\t\tcorrect:0\n\t}\n\n\n\tdeleteQuestion = (chosenValue, correctValue) => {\n\t\t\tconsole.log(this.state.clicked)\n\t\t\tif (chosenValue == correctValue){\n\t\t\t\tthis.setState({\n\t\t\t\t\tcorrect:1,\n\t\t\t\t\tclicked:1\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcorrect:0,\n\t\t\t\t\tclicked:1\n\t\t\t\t})\n\t\t\t}\n\t}\n\n\trender = (props) => {\n\t\tconst questionNum=(this.props.start+2)/2\n\n\t\tif (this.state.clicked == 0){\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t\t<p><em>Pick the more popular food. </em></p>\n\t\t\t\t<div className=\"choices\">\n\t\t\t\t\t<div className=\"choice\">\n\t\t\t\t\t\t<button onClick={() => {\n\t\t\t\t\t\t\tthis.deleteQuestion(this.state.choiceA.value,this.state.correctChoice);\n\t\t\t\t\t\t\tthis.props.selected(this.state.choiceA.value,this.state.correctChoice);}}>\n\t\t\t\t\t\t\t\t{this.state.choiceA.food}</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"choice\">\n\t\t\t\t\t\t<button onClick={() => {\n\t\t\t\t\t\t\tthis.deleteQuestion(this.state.choiceB.value,this.state.correctChoice);\n\t\t\t\t\t\t\tthis.props.selected(this.state.choiceB.value,this.state.correctChoice)}}>{this.state.choiceB.food}</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</React.Fragment>)\n{\t\n\t\t\t\t/*<div className='options'>\n\t\t\t\t\t\t<button className = 'btn btn-primary' onClick={() => {\n\t\t\t\t\t\t\tthis.deleteQuestion(this.state.choiceA.value,this.state.correctChoice);\n\t\t\t\t\t\t\tthis.props.selected(this.state.choiceA.value,this.state.correctChoice);}}>\n\t\t\t\t\t\t\t{this.state.choiceA.food}</button>\n\t\t\t\t\t\t<button className = 'btn btn-primary' onClick={() => {\n\t\t\t\t\t\t\tthis.deleteQuestion(this.state.choiceB.value,this.state.correctChoice);\n\t\t\t\t\t\t\tthis.props.selected(this.state.choiceB.value,this.state.correctChoice)}}>\n\t\t\t\t\t\t\t\t{this.state.choiceB.food}</button>\n\t\t\t\t</div> */}\n\t\t\t\n\t\t\t// )\n\t\t} else if (this.state.correct==0) {\n\t\t\tif (this.state.choiceB.value == this.state.correctChoice) { return ( \n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t\t\t<div className='choices'>\n\t\t\t\t\t\t\t<div className='choice'>\n\t\t\t\t\t\t\t\t<button className = 'selected-incorrect'>{this.state.choiceA.food}</button>\n\t\t\t\t\t\t\t\t<div className=\"order-pct\">{(this.state.choiceA.value*100).toFixed(3)}%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='choice'>\n\t\t\t\t\t\t\t\t<button className = 'not-selected'>{this.state.choiceB.food}</button>\n\t\t\t\t\t\t\t\t<div className=\"order-pct\">{(this.state.choiceB.value*100).toFixed(3)}%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t} else { return ( \n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t\t\t<div className='choices'>\n\t\t\t\t\t\t\t<div className='choice'>\n\t\t\t\t\t\t\t\t<button className = 'not-selected'>{this.state.choiceA.food}</button>\n\t\t\t\t\t\t\t\t<div className=\"order-pct\">{(this.state.choiceA.value*100).toFixed(3)}%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='choice'>\n\t\t\t\t\t\t\t\t<button className = 'selected-incorrect'>{this.state.choiceB.food}</button>\n\t\t\t\t\t\t\t\t<div className=\"order-pct\">{(this.state.choiceB.value*100).toFixed(3)}%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\n\t\t\t}\n\t\t} \n\tif (this.state.choiceB.value == this.state.correctChoice) { return ( \n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t\t\t<div className='choices'>\n\t\t\t\t\t\t\t<div className='choice'>\n\t\t\t\t\t\t\t\t<button className = 'not-selected'>{this.state.choiceA.food}</button>\n\t\t\t\t\t\t\t\t<div className=\"order-pct\">{(this.state.choiceA.value*100).toFixed(3)}%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='choice'>\n\t\t\t\t\t\t\t\t<button className = 'selected-correct'>{this.state.choiceB.food}</button>\n\t\t\t\t\t\t\t\t<div className=\"order-pct\">{(this.state.choiceB.value*100).toFixed(3)}%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t} else { return ( \n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t\t\t<div className='choices'>\n\t\t\t\t\t\t\t<div className='choice'>\n\t\t\t\t\t\t\t\t<button className = 'selected-correct'>{this.state.choiceA.food}</button>\n\t\t\t\t\t\t\t\t<div className=\"order-pct\">{(this.state.choiceA.value*100).toFixed(3)}%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='choice'>\n\t\t\t\t\t\t\t\t<button className = 'not-selected'>{this.state.choiceB.food}</button>\n\t\t\t\t\t\t\t\t<div className=\"order-pct\">{(this.state.choiceB.value*100).toFixed(3)}%</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t<p><strong>Correct! The item you chose has value {this.state.correctChoice}, and the other item has value {this.state.incorrectChoice}.</strong></p>\n\t\t</React.Fragment>\n\t)\t\t\n}\n}\n\nexport default Question;","import React, { Component } from 'react';\n\nclass HighScores extends Component {\n\t\n\tstate = {\n\t\thighscores: []\n\t};\n\n\tconstructor(props) {\n\tsuper(props)\n\tvar delayInMilliseconds = 100; //1 second\n\tsetTimeout(() => {\n\t  fetch('/react')\n\t      .then(res => res.json())\n\t      .then(users => this.setState({highscores:users}));\n\t  }, delayInMilliseconds);\n\t}\n\n    \n\n\trender = (props) => {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h3>High Scores</h3>\n\t\t\t\t<table id=\"highscores\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Score</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{this.state.highscores.map(\n\t\t\t\t \t({name,score}) => ( \n\t\t\t\t \t<React.Fragment>\n\t\t\t\t \t<tr>\n\t\t\t\t\t<td>{name}</td>\n\t\t\t\t\t<td>{score}/10</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t ))}\n    \t</table>\n\t\t\t</React.Fragment>\n\n\n\t\t\t// <React.Fragment>\n\t\t\t// \t<h3>High Scores</h3>\n\t\t\t// \t<ul>\n\t\t\t\t\n\t\t\t// \t</ul>\n\t    // <table className=\"table table-striped custab ordered\">\n\t    // <thead>\n\t    //     <tr>\n\t    //         <th className='left'>&nbsp; &nbsp; &nbsp; Name</th>\n\t    //         <th className='center'>Score</th>\n\t    //     </tr>\n\t    // </thead>\n\t    // \t\t{this.state.highscores.map(\n\t\t\t// \t \t({name,score}) => ( \n\t\t\t// \t \t<React.Fragment>\n\t\t\t// \t \t<tr>\n\t\t\t// \t\t<td className='high-score left'>&nbsp; {name}</td>\n\t\t\t// \t\t<td className='center'>{score}</td>\n\t\t\t// \t\t</tr>\n\t\t\t// \t\t</React.Fragment>\n\t\t\t// \t\t ))}\n\t    // </table>\n\t\t\t// </React.Fragment>\n\t\t\t)\n\t}\n}\nexport default HighScores","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n// var mongoose = require('mongoose');\n// mongoose.connect('mongodb://testuser:password1@ds359118.mlab.com:59118/foodhighscores'); // insert your mlab `MongoDb URI`\n\n// var HighScores = mongoose.model('Score', { name:Number })\n\nclass NameSubmitForm extends Component {\n  state = {\n    score : this.props.currentScore,\n    inputValue : ''\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({score:this.props.currentScore})\n  }\n\n  render = (props) => {\n    return (\n      <React.Fragment>\n        <form onSubmit={this.updateInputValue}>\n          <input type=\"text\" id=\"input1\"></input>\n          <input type='submit'></input>\n          <button class='play-again' onClick={() => {this.props.resetfunc()}}>Play Again</button>\n        </form>\n      </React.Fragment>\n    );\n}\n\n\n  updateInputValue = (evt) => {\n    evt.preventDefault();\n    this.setState({\n      inputValue: evt.target[0].value\n    });\n\n    fetch('/react', {\n      method: 'post',\n      headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        body: JSON.stringify({\n          name: evt.target[0].value,\n          score: this.state.score\n        })\n    })\n    this.props.submitscore();\n  }\n};\n\nexport default NameSubmitForm;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\n// import * as serviceWorker from './serviceWorker';\nimport foodData from './foodData/foodData.json';\nimport Question from './components/Question';\nimport HighScores from './components/HighScores';\nimport NameSubmitForm from './components/NameSubmitForm';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/style.css';\n\n\nclass FoodApp extends Component {\n\n\tconstructor(props){\n\t\tlet randomFoodData = foodData\n\t\tfor (let i = randomFoodData.length - 1; i > 0; i--) {\n\t\t        const j = Math.floor(Math.random() * (i + 1));\n\t\t        [randomFoodData[i], randomFoodData[j]] = [randomFoodData[j], randomFoodData[i]];\n\t\t}\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\t\tfoodBank: randomFoodData,\n\t\t\t\tcorrectAnswers: 0,\n\t\t\t\ttotalAnswers: 0,\n\t\t\t\tsubmittedScore:false,\n\t\t\t\tgoNext:false\n\t\t}\n\t\t// console.log(this.state.foodBank[0].food)\n\t\tthis.createQuiz = this.createQuiz.bind(this);\n\t\tthis.render = this.render.bind(this);\n\t}\n\n\n\tsaySomething = (chosenValue,correctValue) => {\n\t\tif (chosenValue == correctValue){\n\t\t\t\tthis.setState({\n\t\t\t\t\tcorrectAnswers : this.state.correctAnswers+1,\n\t\t\t\t\ttotalAnswers : this.state.totalAnswers+1\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttotalAnswers : this.state.totalAnswers+1\n\t\t\t\t})\n\t\t\t}\n\t\t\tif(this.state.totalAnswers==9) {\n\t\t\t\tconsole.log('it is 10')\n\t\t\t\tdocument.getElementById('go-next').setAttribute('style','display:block;margin-top:20px;background-color:blue')\n\t\t\t} else {\n\t\t\t\tconsole.log(this.state.totalAnswers)\n\t\t\t}\n\t\t\tconsole.log('finished updating parent state to ' + this.state.totalAnswers)\n\t}\n\n\tcreateQuiz = () => {\n\t\tlet children=[]\n\t\tfor (let i=0;i<20;i=i+2){\n\t\t\tchildren.push(\n\t\t\t\t<Question \n\t\t\t\tkey={i}\n\t\t\t\tstart={i}\n\t\t\t\tfoodBank={this.state.foodBank}\n\t\t\t\tselected={(food,correctFood) => this.saySomething(food,correctFood)} />\n\t\t\t\t)\n\t\t}\n\t\treturn children\n\t}\n\n\tresetGame = () => {\n\t\tlet randomFoodData = foodData\n\t\tfor (let i = randomFoodData.length - 1; i > 0; i--) {\n\t\t        const j = Math.floor(Math.random() * (i + 1));\n\t\t        [randomFoodData[i], randomFoodData[j]] = [randomFoodData[j], randomFoodData[i]];\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\t\tfoodBank: randomFoodData,\n\t\t\t\tcorrectAnswers: 0,\n\t\t\t\ttotalAnswers: 0,\n\t\t\t\tsubmittedScore:false\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.state.totalAnswers<10 || this.state.goNext==false){\n\t\t\treturn ( \n\t\t\t\t<React.Fragment>\n\t\t\t\t<div className='top-link'><a className='site-link' href='http://www.samslezek.com'>Go Back to Sam's Website</a></div>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t    <h1>Food Trivia</h1>\n    \t\t\t\t\t<p><em>Pick the more popular food, as defined by % of Instacart orders containing that food. </em></p>\n\t\t\t\t\t{this.createQuiz()}\n\t\t\t\t\t<button id='go-next' onClick={() => this.setState({goNext:true})}>Finish</button>\n\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t}\n\t\t\telse if (this.state.submittedScore==false){\n\t\t\t\treturn ( \n\t\t\t\t<React.Fragment>\n\t\t\t\t<div className='top-link'><a className='site-link' href='http://www.samslezek.com'>Go Back to Sam's Website</a></div>\t\n\t\t\t\t<div className='container'>\n    <h1>Food Trivia</h1>\n    <h3>Results</h3>\n    <p>You got <strong>{this.state.correctAnswers}/{this.state.totalAnswers}</strong> questions correct. You can submit your name to the High Scores list.</p>\n\t\t\t\t\t<NameSubmitForm currentScore={this.state.correctAnswers} submitscore={() => this.setState({submittedScore:true})} resetfunc={() => {this.resetGame()}} />\n\t\t\t\t\t<HighScores />\n\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='top-link'><a className='site-link' href='http://www.samslezek.com'>Go Back to Sam's Website</a></div>\n\t\t\t\t<div className='container'>\n\t\t\t\t<HighScores key={this.state.submittedScore} />\n\t\t\t\t<button className='play-again-solo' onClick={() => {this.resetGame()}}>Play Again</button>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>);\n\t\t\n\t}\n}\n\nReactDOM.render(<FoodApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}