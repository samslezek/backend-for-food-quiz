{"version":3,"sources":["components/Question.js","components/HighScores.js","components/NameSubmitForm.js","index.js"],"names":["Question","state","choiceA","food","props","foodBank","start","value","choiceB","correctChoice","Math","max","incorrectChoice","min","clicked","correct","deleteQuestion","chosenValue","correctValue","console","log","setState","render","questionNum","Fragment","className","onClick","selected","disabled","toFixed","Component","HighScores","highscores","class","map","name","score","setTimeout","fetch","then","res","json","users","NameSubmitForm","currentScore","inputValue","onSubmit","updateInputValue","type","id","placeholder","resetfunc","evt","preventDefault","target","method","headers","body","JSON","stringify","submitscore","nextProps","this","FoodApp","randomFoodData","foodData","i","length","j","floor","random","saySomething","correctAnswers","totalAnswers","createQuiz","children","push","key","correctFood","resetGame","submittedScore","bind","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8d212df1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Question extends Component {\n\t\n\tstate = {\n\t\tchoiceA : {\n\t\t\tfood: this.props.foodBank[this.props.start].food,\n\t\t\tvalue: this.props.foodBank[this.props.start].value\n\t\t},\n\t\tchoiceB : {\n\t\t\tfood: this.props.foodBank[this.props.start+1].food,\n\t\t\tvalue: this.props.foodBank[this.props.start+1].value\n\t\t},\n\t\tcorrectChoice : Math.max(this.props.foodBank[this.props.start].value,this.props.foodBank[this.props.start+1].value),\n\t\tincorrectChoice : Math.min(this.props.foodBank[this.props.start].value,this.props.foodBank[this.props.start+1].value),\n\t\tclicked:0,\n\t\tcorrect:0\n\t}\n\n\n\tdeleteQuestion = (chosenValue, correctValue) => {\n\t\t\tconsole.log(this.state.clicked)\n\t\t\tif (chosenValue == correctValue){\n\t\t\t\tthis.setState({\n\t\t\t\t\tcorrect:1,\n\t\t\t\t\tclicked:1\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcorrect:0,\n\t\t\t\t\tclicked:1\n\t\t\t\t})\n\t\t\t}\n\t}\n\n\trender = (props) => {\n\t\tconst questionNum=(this.props.start+2)/2\n\n\t\tif (this.state.clicked == 0){\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t\t<div className='options'>\n\t\t\t\t\t\t<button className = 'btn btn-primary' onClick={() => {\n\t\t\t\t\t\t\tthis.deleteQuestion(this.state.choiceA.value,this.state.correctChoice);\n\t\t\t\t\t\t\tthis.props.selected(this.state.choiceA.value,this.state.correctChoice);}}>\n\t\t\t\t\t\t\t{this.state.choiceA.food}</button>\n\t\t\t\t\t\t<button className = 'btn btn-primary' onClick={() => {\n\t\t\t\t\t\t\tthis.deleteQuestion(this.state.choiceB.value,this.state.correctChoice);\n\t\t\t\t\t\t\tthis.props.selected(this.state.choiceB.value,this.state.correctChoice)}}>\n\t\t\t\t\t\t\t\t{this.state.choiceB.food}</button>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t\t)\n\t\t} else if (this.state.correct==0) {\n\t\t\tif (this.state.choiceB.value == this.state.correctChoice) { return ( \n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t\t\t<div className='options'>\n\t\t\t\t\t\t\t<button className = 'btn btn-danger' disabled>\n\t\t\t\t\t\t\t\t{this.state.choiceA.food}</button>\n\t\t\t\t\t\t\t<button className = 'btn btn-secondary' disabled>\n\t\t\t\t\t\t\t\t\t{this.state.choiceB.food}</button>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div className='below-button'>{(this.state.choiceA.value*100).toFixed(3)}%</div>\n\t\t\t\t\t\t\t<div className='below-button'><strong>{(this.state.choiceB.value*100).toFixed(3)}%</strong></div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t} else { return ( \n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t\t\t<div className='options'>\n\t\t\t\t\t\t\t<button className = 'btn btn-secondary' disabled>\n\t\t\t\t\t\t\t\t{this.state.choiceA.food}</button>\n\t\t\t\t\t\t\t<button className = 'btn btn-danger' disabled>\n\t\t\t\t\t\t\t\t\t{this.state.choiceB.food}</button>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div className='below-button'><strong>{(this.state.choiceA.value*100).toFixed(3)}%</strong></div>\n\t\t\t\t\t\t\t<div className='below-button'>{(this.state.choiceB.value*100).toFixed(3)}%</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\n\t\t\t}\n\t\t} \n\tif (this.state.choiceB.value == this.state.correctChoice) { return ( \n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t\t\t<div className='options'>\n\t\t\t\t\t\t\t<button className = 'btn btn-secondary' disabled>\n\t\t\t\t\t\t\t\t{this.state.choiceA.food}</button>\n\t\t\t\t\t\t\t<button className = 'btn btn-success' disabled>\n\t\t\t\t\t\t\t\t\t{this.state.choiceB.food}</button>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div className='below-button'>{(this.state.choiceA.value*100).toFixed(3)}%</div>\n\t\t\t\t\t\t\t<div className='below-button'><strong>{(this.state.choiceB.value*100).toFixed(3)}%</strong></div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t} else { return ( \n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t\t\t<div className='options'>\n\t\t\t\t\t\t\t<button className = 'btn btn-success' disabled>\n\t\t\t\t\t\t\t\t{this.state.choiceA.food}</button>\n\t\t\t\t\t\t\t<button className = 'btn btn-secondary' disabled>\n\t\t\t\t\t\t\t\t\t{this.state.choiceB.food}</button>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div className='below-button'><strong>{(this.state.choiceA.value*100).toFixed(3)}%</strong></div>\n\t\t\t\t\t\t\t<div className='below-button'>{(this.state.choiceB.value*100).toFixed(3)}%</div>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h3>Question {questionNum}</h3>\n\t\t\t<p><strong>Correct! The item you chose has value {this.state.correctChoice}, and the other item has value {this.state.incorrectChoice}.</strong></p>\n\t\t</React.Fragment>\n\t)\t\t\n}\n}\n\nexport default Question;","import React, { Component } from 'react';\n\nclass HighScores extends Component {\n\t\n\tstate = {\n\t\thighscores: []\n\t};\n\n\tconstructor(props) {\n\tsuper(props)\n\tvar delayInMilliseconds = 100; //1 second\n\tsetTimeout(() => {\n\t  fetch('/react')\n\t      .then(res => res.json())\n\t      .then(users => this.setState({highscores:users}));\n\t  }, delayInMilliseconds);\n\t}\n    \n\n\trender = (props) => {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h3>High Scores</h3>\n\t\t\t\t<ul>\n\t\t\t\t\n\t\t\t\t</ul>\n\t    <div class=\"row col-md-6 col-md-offset-2 custyle\">\n\t    <table class=\"table table-striped custab\">\n\t    <thead>\n\t        <tr>\n\t            <th>Name</th>\n\t            <th>Score</th>\n\t        </tr>\n\t    </thead>\n\t    \t\t{this.state.highscores.map(\n\t\t\t\t \t({name,score}) => ( \n\t\t\t\t \t<React.Fragment>\n\t\t\t\t \t<tr>\n\t\t\t\t\t<td>{name}</td>\n\t\t\t\t\t<td>{score}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t ))}\n\t    </table>\n\t    </div>\n\t\t\t</React.Fragment>\n\t\t\t)\n\t}\n}\nexport default HighScores","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n// var mongoose = require('mongoose');\n// mongoose.connect('mongodb://testuser:password1@ds359118.mlab.com:59118/foodhighscores'); // insert your mlab `MongoDb URI`\n\n// var HighScores = mongoose.model('Score', { name:Number })\n\nclass NameSubmitForm extends Component {\n  state = {\n    score : this.props.currentScore,\n    inputValue : ''\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({score:this.props.currentScore})\n  }\n\n  render = (props) => {\n    return (\n      //...\n      <React.Fragment>\n        <form onSubmit={this.updateInputValue}>\n          <div className=\"form-group\">\n            <input type=\"text\" className=\"form-control\" id=\"input1\"  placeholder=\"Enter Name For High Score...\" />\n            <button type='submit' class='btn btn-primary btn-sm'>Submit</button>\n            <button className='btn btn-sm btn-primary btn-sm' onClick={() => {this.props.resetfunc()}}>Play Again</button>\n          </div>\n        </form>\n      </React.Fragment>\n    );\n}\n\n\n  updateInputValue = (evt) => {\n    evt.preventDefault();\n    this.setState({\n      inputValue: evt.target[0].value\n    });\n\n    fetch('/react', {\n      method: 'post',\n      headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        body: JSON.stringify({\n          name: evt.target[0].value,\n          score: this.state.score\n        })\n    })\n    this.props.submitscore();\n  }\n};\n\nexport default NameSubmitForm;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\n// import * as serviceWorker from './serviceWorker';\nimport foodData from './foodData/foodData.json';\nimport Question from './components/Question';\nimport HighScores from './components/HighScores';\nimport NameSubmitForm from './components/NameSubmitForm';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/style.css';\n\n\nclass FoodApp extends Component {\n\n\tconstructor(props){\n\t\tlet randomFoodData = foodData\n\t\tfor (let i = randomFoodData.length - 1; i > 0; i--) {\n\t\t        const j = Math.floor(Math.random() * (i + 1));\n\t\t        [randomFoodData[i], randomFoodData[j]] = [randomFoodData[j], randomFoodData[i]];\n\t\t}\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\t\tfoodBank: randomFoodData,\n\t\t\t\tcorrectAnswers: 0,\n\t\t\t\ttotalAnswers: 0,\n\t\t\t\tsubmittedScore:false\n\t\t}\n\t\t// console.log(this.state.foodBank[0].food)\n\t\tthis.createQuiz = this.createQuiz.bind(this);\n\t\tthis.render = this.render.bind(this);\n\t}\n\n\n\tsaySomething = (chosenValue,correctValue) => {\n\t\tif (chosenValue == correctValue){\n\t\t\t\tthis.setState({\n\t\t\t\t\tcorrectAnswers : this.state.correctAnswers+1,\n\t\t\t\t\ttotalAnswers : this.state.totalAnswers+1\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttotalAnswers : this.state.totalAnswers+1\n\t\t\t\t})\n\t\t\t}\n\t\t\tconsole.log('finished updating parent state to ' + this.state.correctAnswers)\n\t}\n\n\tcreateQuiz = () => {\n\t\tlet children=[]\n\t\tfor (let i=0;i<20;i=i+2){\n\t\t\tchildren.push(\n\t\t\t\t<Question \n\t\t\t\tkey={i}\n\t\t\t\tstart={i}\n\t\t\t\tfoodBank={this.state.foodBank}\n\t\t\t\tselected={(food,correctFood) => this.saySomething(food,correctFood)} />\n\t\t\t\t)\n\t\t}\n\t\treturn children\n\t}\n\n\tresetGame = () => {\n\t\tlet randomFoodData = foodData\n\t\tfor (let i = randomFoodData.length - 1; i > 0; i--) {\n\t\t        const j = Math.floor(Math.random() * (i + 1));\n\t\t        [randomFoodData[i], randomFoodData[j]] = [randomFoodData[j], randomFoodData[i]];\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\t\tfoodBank: randomFoodData,\n\t\t\t\tcorrectAnswers: 0,\n\t\t\t\ttotalAnswers: 0,\n\t\t\t\tsubmittedScore:false\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.state.totalAnswers<10){\n\t\t\treturn ( \n\t\t\t\t<div className='container'>\n\t\t\t\t\t<h1>Food Trivia</h1>\n\t\t\t\t\t<p><em>The below questions select foods from the Instacart database. Try to select the more popular food in each question, as defined by % of Instacart orders containing that food.</em></p>\n\t\t\t\t\t{this.createQuiz()}\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t} else if (this.state.submittedScore==false){\n\t\t\t\treturn ( \n\t\t\t\t<div className='container'>\n\t\t\t\t\t<h3>Food Trivia Results</h3>\n\t\t\t\t\t<p>You got <strong>{this.state.correctAnswers}/{this.state.totalAnswers} questions correct.</strong></p>\n\t\t\t\t\t<br />\n\t\t\t\t\t<NameSubmitForm currentScore={this.state.correctAnswers} submitscore={() => this.setState({submittedScore:true})} resetfunc={() => {this.resetGame()}} />\n\t\t\t\t\t<HighScores />\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<HighScores key={this.state.submittedScore} />\n\t\t\t\t<button className='btn btn-primary' onClick={() => {this.resetGame()}}>Play Again</button>\n\t\t\t</React.Fragment>);\n\t\t\n\t}\n}\n\nReactDOM.render(<FoodApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}